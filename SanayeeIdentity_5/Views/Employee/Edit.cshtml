@model SanayeeIdentity_5.Data.Worker

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Worker</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WorkerId)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.Available)








        <div class="col-md-10">
            @*@Html.EditorFor(m => m.Name, new { @class = "form-control" })*@
            @{
                var imgsrc = string.Empty;
                if (Model.PhotoBin != null)
                {
                    var base64 = Convert.ToBase64String(Model.PhotoBin);
                    imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                }
                else
                {

                    imgsrc = "/Images/pT78y5n8c.jpg";
                }

            }

            <img src="@imgsrc" width="100" height="100" id="DbImg" />



        </div>





                <div class="form-group">
                    @Html.LabelFor(model => model.SBIN, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SBIN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SBIN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Onwork, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Onwork)
                            @Html.ValidationMessageFor(model => model.Onwork, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.TotalRate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TotalRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalRate, "", new { @class = "text-danger" })
                    </div>
                </div>
 


                <div class="form-group">
                    @Html.LabelFor(model => model.TypeId, "TypeId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
